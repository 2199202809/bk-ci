# 对流水线心跳进行单独的处理
location = /process/api/build/builds/heartbeat {
    error_page 500 = @buildend_json_handler;

    auth_request /auth/build;

    # 设置auth的变量
    include auth.request.set.build.conf;

    set $access_type 'build';
    set $service "process";
    set $target '';

    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.build.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/build/builds/heartbeat?$args;
}

# 对流水线心跳进行单独的处理
location = /ms/process/api/build/builds/heartbeat {
    error_page 500 = @buildend_json_handler;

    auth_request /auth/build;

    # 设置auth的变量
    include auth.request.set.build.conf;

    set $access_type 'build';
    set $service "process";
    set $target '';

    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.build.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/build/builds/heartbeat?$args;
}

# 拦截agent的升级请求
location ^~ /ms/environment/api/buildAgent/agent/thirdPartyAgent/upgrade/files/download {
    include gray.conf;
    access_by_lua_file "conf/lua/agent_update.lua";

    set_by_lua_block $target {
        return config.bkrepo.domain
    }

    proxy_pass http://$target/generic/bkdevops/static/gw/dispatch/$grayDir/$arg_file;
}